#################################################################
## Security System
################################################################# 

- id: abode_ios_notifications
  alias: Abode Actionable Notification
  trigger:
    - platform: event
      event_type: abode_alarm
  action:
    - service: notify.ios_parents
      data:
        message: 'Abode alarm triggered!'
        data:
          push:
            badge: 0
            category: "abode_alarm"

- id: arm_abode_when_we_leave
  alias: 'Arm Abode When We Leave'
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: group.parents_and_big_kids
      to: 'away'
  action:
     service: homeassistant.turn_on
     entity_id: script.abodeaway

- id: disarm_abode_when_we_come_home
  alias: 'Disarm Abode when we come home'
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: group.parents_and_big_kids
      to: 'home'
    - platform: event
      event_type: ios.notification_action_fired
      event_data:
        actionName: DISARM_ABODE
  action:
     service: homeassistant.turn_on
     entity_id: script.abodestandby

- id: abode_was_disarmed
  alias: 'Trigger when Abode was disarmed'
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: alarm_control_panel.abode_alarm
      to: "disarmed"           
  action:
     service: homeassistant.turn_on
     entity_id: script.abodestandby

- id: abode_was_armed_away
  alias: 'Trigger when Abode was Armed Away'
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: alarm_control_panel.abode_alarm
      to: "armed_away"           
  action:
     service: homeassistant.turn_on
     entity_id: script.abodeaway

- id: abode_was_armed_home
  alias: 'Trigger when Abode was Armed Home'
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: alarm_control_panel.abode_alarm
      to: "armed_home"           
  action:
     service: homeassistant.turn_on
     entity_id: script.abodehome


#- id: abode_home_selected
#  alias: 'Abode Home Selected'
#  initial_state: 'on'
#  condition:
#     - condition: state
#       entity_id: input_boolean.abodeupdate
#       state: 'on'
#  trigger:
#   - platform: state
#     entity_id: input_select.abodestatus
#     to: 'armed_home'     
#  action:
#     service: homeassistant.turn_on
#     entity_id: script.abodehome
#     
#- id: abode_standby_selected
#  alias: 'Abode Standby Selected'
#  initial_state: 'on'
#  condition:
#     - condition: state
#       entity_id: input_boolean.abodeupdate
#       state: 'on'
#  trigger:
#   - platform: state
#     entity_id: input_select.abodestatus
#     to: 'disarmed'     
#  action:
#     service: homeassistant.turn_on
#     entity_id: script.abodestandby
#
#- id: abode_away_selected
#  alias: 'Abode Away Selected'
#  initial_state: 'on'
#  condition:
#     - condition: state
#       entity_id: input_boolean.abodeupdate
#       state: 'on'
#  trigger:
#   - platform: state
#     entity_id: input_select.abodestatus
#     to: 'armed_away'     
#  action:
#     service: homeassistant.turn_on
#     entity_id: script.abodeaway     
#     

- id: notify_camera_pictures
  alias: 'Notify camera pictures'
  initial_state: 'on'
  condition:
    - condition: state
      entity_id: alarm_control_panel.abode_alarm
      state: 'armed_away'
  trigger:
   - platform: state
     entity_id:
       - binary_sensor.entryway_camera_motion_detected
       - binary_sensor.entryway_camera__zone_1_activity
       - binary_sensor.entryway_camera_person_detected
       - binary_sensor.entryway_camera_sound_detected
       - binary_sensor.master_bedroom_camera_motion_detected
       - binary_sensor.master_bedroom_camera_person_detected
       - binary_sensor.master_bedroom_camera_sound_detected
     from: 'off'
     to: 'on'

  action:
    - service: notify.ios_parents
      data_template:
        message: "Check {{ trigger.entity_id.split('.')[1].split('_')[0] }} camera."
        data:
          push:
            category: camera
          entity_id: "camera.{{ trigger.entity_id.split('.')[1].split('_')[0] }}"
          attachment:
            url: "{{ states.camera[trigger.entity_id.split('.')[1].split('_')[0]].attributes.entity_picture }}"
            content-type: jpg
    - service: logbook.log
      data_template:
        name: "Camera activity: "
        message: >-
          {%- for state in states if state.entity_id == trigger.entity_id -%}
            {{ state.attributes.friendly_name }} activated at {{ as_timestamp(now()) | timestamp_custom('%I:%M:%S %p', true) }}.
          {%- endfor -%}