#################################################################
## Security System
################################################################# 

- id: abode_ios_notifications
  alias: Abode Actionable Notification
  trigger:
    - platform: event
      event_type: abode_alarm
  action:
    - service: notify.ios
      data:
        message: 'Abode alarm triggered!'
        data:
          push:
            badge: 0
            category: "abode_alarm"

- id: disarm_abode_from_away
  alias: 'Disarm Abode from Away'
  initial_state: 'on'
  condition:
    - condition: state
      entity_id: input_select.abodestatus
      state: 'armed_away'
    - condition: state
      entity_id: input_boolean.abodeupdate
      state: 'on'
    - condition: template
      value_template: >
        {%- if states.automation.arm_abode.attributes.last_triggered -%}
          {{ (as_timestamp(now()) - as_timestamp(states.automation.arm_abode.attributes.last_triggered)) > 240 }}
        {%- else -%}
          true
        {%- endif -%}
  trigger:
    - platform: state
      entity_id: group.household
      from: 'off'
      to: 'on'
    - platform: event
      event_type: ios.notification_action_fired
      event_data:
        actionName: DISARM_ABODE
  action:
     service: homeassistant.turn_on
     entity_id: script.abodestandby

#- id: close_garage_door_notification
#  alias: 'Close Garage Door Notification'
#  initial_state: 'on'
#  condition:
#    condition: state
#    entity_id: cover.garage_door_opener
#    state: 'open'
#  trigger:
#    - platform: state
#      entity_id: input_select.abodestatus
#      to: 'armed_home'
#  action:
#    - service: notify.pushbullet
#      data:
#        message: "Garage Door Open"
#        title: "Garage Door Open"
#    - service: notify.pushbullet
#      data:
#        message: "Garage Door Open"
#        title: "Garage Door Open"
#    - service: homeassistant.turn_on
#      entity_id: script.notificationgaragedoor

- id: disarm_abode_at_night
  alias: 'Disarm Abode at night'
  initial_state: 'on'
  condition:
    - condition: state
      entity_id: input_select.abodestatus
      state: 'armed_home'
    - condition: state
      entity_id: input_boolean.abodeupdate
      state: 'on'
  trigger:
   - platform: state
     entity_id:
       - group.household
     from: 'off'
     to: 'on'
  action:
    service: homeassistant.turn_on
    entity_id: script.abodestandby

- id: abode_home_from_standby
  alias: 'Abode Home from Standby'
  initial_state: 'on'
  condition:
    condition: and
    conditions:
     - condition: state
       entity_id: input_select.abodestatus
       state: 'disarmed'
     - condition: time
       after: '23:00:00'
       before: '07:00:00'
     - condition: state
       entity_id: input_boolean.abodeupdate
       state: 'on'
     - condition: template
       value_template: >
         {%- if states.input_select.abodestatus.last_changed -%}
           {{ (as_timestamp(now()) - as_timestamp(states.input_select.abodestatus.last_changed)) > 300 }}
         {%- else -%}
           true
         {%- endif -%}
  trigger:
   - platform: time
     minutes: '/10'
     seconds: 00 
  action:
     service: homeassistant.turn_on
     entity_id: script.abodehome

- id: abode_home_selected
  alias: 'Abode Home Selected'
  initial_state: 'on'
  condition:
     - condition: state
       entity_id: input_boolean.abodeupdate
       state: 'on'
  trigger:
   - platform: state
     entity_id: input_select.abodestatus
     to: 'armed_home'     
  action:
     service: homeassistant.turn_on
     entity_id: script.abodehome
     
- id: abode_standby_selected
  alias: 'Abode Standby Selected'
  initial_state: 'on'
  condition:
     - condition: state
       entity_id: input_boolean.abodeupdate
       state: 'on'
  trigger:
   - platform: state
     entity_id: input_select.abodestatus
     to: 'disarmed'     
  action:
     service: homeassistant.turn_on
     entity_id: script.abodestandby

- id: abode_away_selected
  alias: 'Abode Away Selected'
  initial_state: 'on'
  condition:
     - condition: state
       entity_id: input_boolean.abodeupdate
       state: 'on'
  trigger:
   - platform: state
     entity_id: input_select.abodestatus
     to: 'armed_away'     
  action:
     service: homeassistant.turn_on
     entity_id: script.abodeaway     
     
- id: abode_standby
  alias: 'Abode Standby'
  initial_state: 'on'
  condition:
    condition: and
    conditions:
     - condition: state
       entity_id: group.household
       state: 'on'
     - condition: time
       after: '07:15:00'
       before: '22:45:00'
     - condition: state
       entity_id: input_boolean.abodeupdate
       state: 'on'
     - condition: template
       value_template: >
         {%- if states.input_select.abodestatus.last_changed -%}
           {{ (as_timestamp(now()) - as_timestamp(states.input_select.abodestatus.last_changed)) > 300 }}
         {%- else -%}
           true
         {%- endif -%}
     - condition: or
       conditions:
        - condition: state
          entity_id: input_select.abodestatus
          state: 'armed_home'
        - condition: state
          entity_id: input_select.abodestatus
          state: 'armed_away'
  trigger:
   - platform: time
     minutes: '/1'
     seconds: 00  
  action:
     service: homeassistant.turn_on
     entity_id: script.abodestandby

- id: abode_away
  alias: 'Abode Away'
  initial_state: 'on'
  condition:
    condition: and
    conditions:
     - condition: state
       entity_id: group.household
       state: 'off'
     - condition: state
       entity_id: input_boolean.abodeupdate
       state: 'on'
     - condition: or
       conditions:
        - condition: state
          entity_id: input_select.abodestatus
          state: 'armed_home'
        - condition: state
          entity_id: input_select.abodestatus
          state: 'disarmed'
  trigger:
   - platform: time
     minutes: '/1'
     seconds: 00  
  action:
     service: homeassistant.turn_on
     entity_id: script.abodeaway

- id: abode_arm
  alias: 'Arm Abode'
  initial_state: 'on'
  condition:
    - condition: state
      entity_id: input_boolean.abodeupdate
      state: 'on'
    - condition: template
      value_template: >
        {%- if states.automation.disarm_abode_from_away.attributes.last_triggered -%}
          {{ (as_timestamp(now()) - as_timestamp(states.automation.disarm_abode_from_away.attributes.last_triggered)) > 240 }}
        {%- else -%}
          true
        {%- endif -%}
    - condition: template
      value_template: "{{ states.input_select.abodestatus.state != 'armed_away' }}"
  trigger:
    - platform: state
      entity_id: group.household
      from: 'on'
      to: 'off'
    - platform: state
      entity_id: group.household
      from: 'on'
      to: 'off'
      for: '00:10:00'   
  action:
     service: homeassistant.turn_on
     entity_id: script.abodeaway

- id: abode_home_at_night
  alias: 'Abode Home at night'
  initial_state: 'on'
  condition:
    condition: and
    conditions:
     - condition: state
       entity_id: input_boolean.abodeupdate
       state: 'on'
     - condition: state
       entity_id: group.household
       state: 'on'
  trigger:
    - platform: time
      at: '22:00:00'
  action:
     service: homeassistant.turn_on
     entity_id: script.abodehome

- id: abode_disarm_morning
  alias: 'Disarm Abode in the morning'
  initial_state: 'on'
  condition:
    condition: and
    conditions:
     - condition: state
       entity_id: group.household
       state: 'on'
     - condition: state
       entity_id: input_boolean.abodeupdate
       state: 'on'
  trigger:
    - platform: time
      at: '07:00:00'
  action:
     service: homeassistant.turn_on
     entity_id: script.abodestandby

- id: abode_was_disarmed
  alias: 'Trigger when Abode was disarmed'
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: alarm_control_panel.abode_alarm
      to: "disarmed"           
  action:
     service: homeassistant.turn_on
     entity_id: script.abodestandby

- id: abode_was_armed_away
  alias: 'Trigger when Abode was Armed Away'
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: alarm_control_panel.abode_alarm
      to: "armed_away"           
  action:
     service: homeassistant.turn_on
     entity_id: script.abodeaway

- id: abode_was_armed_home
  alias: 'Trigger when Abode was Armed Home'
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: alarm_control_panel.abode_alarm
      to: "armed_home"           
  action:
     service: homeassistant.turn_on
     entity_id: script.abodehome

- id: notify_camera_pictures
  alias: 'Notify camera pictures'
  initial_state: 'on'
  condition:
    - condition: state
      entity_id: alarm_control_panel.abode_alarm
      state: 'armed_away'
  trigger:
   - platform: state
     entity_id:
       - binary_sensor.entryway_camera_motion_detected
       - binary_sensor.entryway_camera__zone_1_activity
       - binary_sensor.entryway_camera_person_detected
       - binary_sensor.entryway_camera_sound_detected
       - binary_sensor.master_bedroom_camera_motion_detected
       - binary_sensor.master_bedroom_camera_person_detected
       - binary_sensor.master_bedroom_camera_sound_detected
     from: 'off'
     to: 'on'
  action:
    - service: notify.ios
      data_template:
        message: "Check {{ trigger.entity_id.split('.')[1].split('_')[0] }} camera."
        data:
          push:
            category: camera
          entity_id: "camera.{{ trigger.entity_id.split('.')[1].split('_')[0] }}"
          attachment:
            url: "{{ states.camera[trigger.entity_id.split('.')[1].split('_')[0]].attributes.entity_picture }}"
            content-type: jpg
    - service: logbook.log
      data_template:
        name: "Camera activity: "
        message: >-
          {%- for state in states if state.entity_id == trigger.entity_id -%}
            {{ state.attributes.friendly_name }} activated at {{ as_timestamp(now()) | timestamp_custom('%I:%M:%S %p', true) }}.
          {%- endfor -%}
#    - service: logbook.log
#      data_template:
#        name: "Motion detected: "
#        message: >-
#          {%- if trigger.entity_id == "binary_sensor.backyard_field_detection" or trigger.entity_id == "binary_sensor.backyard_line_crossing" -%}
#            {{(as_timestamp(now()) - as_timestamp(states.binary_sensor.backyard_motion.attributes.last_tripped_time))|round(2)}} seconds ago.
#          {%- elif trigger.entity_id == "binary_sensor.driveway_field_detection" or trigger.entity_id == "binary_sensor.driveway_line_crossing" -%}
#            {{(as_timestamp(now()) - as_timestamp(states.binary_sensor.driveway_motion.attributes.last_tripped_time))|round(2)}} seconds ago.
#          {%- elif trigger.entity_id == "binary_sensor.patio_field_detection" or trigger.entity_id == "binary_sensor.patio_line_crossing" -%}
#            {{(as_timestamp(now()) - as_timestamp(states.binary_sensor.patio_motion.attributes.last_tripped_time))|round(2)}} seconds ago.
#          {%- elif trigger.entity_id == "binary_sensor.porch_field_detection" or trigger.entity_id == "binary_sensor.porch_line_crossing" -%}
#            {{(as_timestamp(now()) - as_timestamp(states.binary_sensor.porch_motion.attributes.last_tripped_time))|round(2)}} seconds ago.
#          {%- endif -%}

#- id: ring_camera_notification
#  alias: 'Notify Ring camera'
#  initial_state: 'on'
#  condition:
#    - condition: state
#      entity_id: input_select.abodestatus
#      state: 'armed_away'
#  trigger:
#   - platform: state
#     entity_id: sensor.ringvideourl
#  action:
#    - service: notify.ios
#      data_template:
#        message: "Check Ring camera."
#        data:
#          push:
#            category: camera
#          entity_id: camera.front_door
#          attachment:
#            url: "{{ states.camera.front_door.attributes.video_url }}"
#
#- id: ring_download_video
#  alias: 'Ring download video'
#  initial_state: 'on'
#  trigger:
#   - platform: state
#     entity_id: sensor.ringvideourl
#  action:
#    - service: downloader.download_file
#      data_template:
#        url: "{{ states.camera.front_door.attributes.video_url }}"
#        subdir: "{{'ring_' + states.camera.front_door.attributes.friendly_name.lower().replace(' ', '_')}}"
#        overwrite: True
#        filename: "{{states.camera.front_door.attributes.friendly_name.lower().replace(' ', '_')}}"
