#################################################################
## HASS Related
#################################################################

- id: change_current_theme
  alias: 'Change Current Theme'
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: input_select.current_theme
  action:
    - service: frontend.set_theme
      data_template:
        name: '{{states.input_select.current_theme.state}}'

#################################################################
## Commute Times
#################################################################

- id: morning_commute
  alias: "Morning Commute"
  initial_state: 'on'
  condition:
    condition: and
    conditions:
     - condition: time
       after: '08:15:00'
       before: '11:00:00'
     - condition: time
       weekday:
         - mon
         - tue
         - wed
         - thu
         - fri
     - condition: state
       entity_id: device_tracker.meta_grady
       state: 'home'
  trigger:
    platform: numeric_state
    entity_id: sensor.morning_commute
    below: 43
  action:
    - service: notify.pushbullet
      data:
        message: Commute time is 43 minutes
        title: Leave for Work
        target: device/myiPhone
    - service: homeassistant.turn_on
      entity_id: script.notificationleavework

- id: evening_commute
  alias: "Evening Commute"
  initial_state: 'on'
  condition:
    condition: and
    conditions:
     - condition: time
       after: '17:00:00'
       before: '20:00:00'
     - condition: time
       weekday:
         - mon
         - tue
         - wed
         - thu
         - fri
     - condition: template
       value_template: >
         {%- if states.device_tracker.meta_grady -%}
           {{ states.device_tracker.meta_grady.state != 'home' }}
         {%- else -%}
           false
         {%- endif -%}
  trigger:
    platform: template
    value_template: >
      {%- if states.sensor.grady_to_home.attributes.duration_in_traffic -%}
        {{(states.sensor.grady_to_home.attributes.duration_in_traffic.split(' ')[0]|int) / (states.sensor.grady_to_home.attributes.duration.split(' ')[0]|int) < 1.25}}
      {%- else -%}
        false
      {%- endif -%}
  action:
    service: notify.pushbullet
    data_template:
      message: Commute time is {{states.sensor.grady_to_home.attributes.duration_in_traffic.split(' ')[0]|int}} minutes
      title: Leave for Home
      target: device/myiPhone

- id: plexspy_notification
  alias: "Plex Spy notification"
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: sensor.plexspy
  action:
    - service: notify.pushbullet
      data_template:
        message: >
          {%- if states.sensor.plexspy.attributes -%}
            {% set space = joiner(' ') %}
            {%- for attr in states.sensor.plexspy.attributes -%}
             {%- if not attr=="friendly_name" and not attr=="unit_of_measurement" and not attr=="homebridge_hidden"-%}
              {{space()}}{{attr}} is watching {{states.sensor.plexspy.attributes[attr]}}.
             {%- endif -%}
            {%- endfor -%}
          {%- endif -%}
        title: "Plex {{ trigger.to_state.state }} people streaming. "
        target: device/myiPhone
    - service: logbook.log
      data_template:
        name: "Plex {{ trigger.to_state.state }} people streaming. "
        message: >
          {%- if states.sensor.plexspy.attributes -%}
            {% set space = joiner(' ') %}
            {%- for attr in states.sensor.plexspy.attributes -%}
             {%- if not attr=="friendly_name" and not attr=="unit_of_measurement" and not attr=="homebridge_hidden"-%}
              {{space()}}{{attr}} is watching {{states.sensor.plexspy.attributes[attr]}}.
             {%- endif -%}
            {%- endfor -%}
          {%- endif -%}

#################################################################
## Home Automation Related
#################################################################

#- id: overflow_pantry_door_open
#  alias: Overflow Pantry Door Left Open Notification
#  initial_state: 'on'  
#  trigger:
#    - platform: time
#    # You can also match on interval. This will match every 5 minutes
#      minutes: '/5'
#      seconds: 00      
#  condition:
#    - condition: state
#      entity_id: group.family
#      state: 'on' 
#    - condition: state
#      entity_id: sensor.overflow_pantry_door
#      state: 'open'   
#  action:
#    - service: notify.ios
#      data:
#        message: 'Overflow Pantry Door left open'
#        data:
#          push:
#            badge: 0

- id: garage_lights_on
  alias: 'Turn on garage lights when door opened'
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: cover.garage_door_opener
      from: 'closed'
      to: 'open'
  condition:
    - condition: state
      entity_id: sun.sun
      state: 'below_horizon'
  action:
     service: switch.turn_on
     data:
       entity_id: switch.garage_light_switch

- id: garage_lights_off
  alias: 'Turn off garage lights'
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: binary_sensor.garage_door
      to: 'off'
      for: '00:05:00'
  condition:
    - condition: state
      entity_id: switch.garage_light_switch
      state: 'on'
  action:
     service: switch.turn_off
     entity_id: switch.garage_light_switch

- id: garage_lights_on_upon_entry
  alias: 'Turn on garage lights when entering garage'
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: binary_sensor.garage_door
      to: 'on'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: sun.sun
        state: 'below_horizon'
      - condition: state
        entity_id: switch.garage_light_switch
        state: 'off'
  action:
     service: switch.turn_on
     entity_id: switch.garage_light_switch
     
- id: frontyard_lights
  alias: 'Turn on frontyard lights'
  initial_state: 'on'
  condition:
    - condition: state
      entity_id: sun.sun
      state: 'below_horizon'
    - condition: time
      after: '19:00:00'
      before: '05:00:00'
  trigger:
   - platform: state
     entity_id:
       - binary_sensor.entryway_camera_motion_detected
     from: 'off'
     to: 'on'
  action:
    - service: switch.turn_on
      entity_id:
        - switch.front_garage_light_switch
        - switch.front_porch_light_switch        

- id: turn_off_front_lights_after_10min
  alias: Turn off front lights 10 minutes after last movement
  initial_state: 'on'
  condition:
    - condition: state
      entity_id: sun.sun
      state: 'below_horizon'
    - condition: time
      after: '19:00:00'
      before: '06:00:00'
  trigger:
    platform: state
    entity_id: 
      - binary_sensor.entryway_camera_motion_detected
    to: 'off'
    for:
      minutes: 10
  action:
    service: switch.turn_off
    entity_id: 
      - switch.front_garage_light_switch
      - switch.front_porch_light_switch      
#
#- id: outdoor_light_at_night
#  alias: Outdoor lights at night
#  initial_state: 'on'
#  trigger:
#    platform: sun
#    event: sunset
#    offset: "00:05:00"
#  action:
#    - service: switch.turn_on
#      entity_id:
#        - switch.front_garage_light_switch
#        - switch.front_porch_light_switch
#        - switch.outside_den_light_switch
#        - switch.side_of_garage_light_switch
#        
#- id: outdoor_light_off
#  alias: Outdoor light Off
#  initial_state: 'on'
#  trigger:
#    platform: sun
#    event: sunset
#    offset: "03:30:00"
#  action:
#    - service: switch.turn_off
#      entity_id:
#        - switch.front_garage_light_switch
#        - switch.front_porch_light_switch
#        - switch.outside_den_light_switch
#        - switch.side_of_garage_light_switch
#
#- id: outsides_light_off_during_the_day
#  alias: Outside lights Off during the day
#  initial_state: 'on'
#  trigger:
#    platform: state
#    entity_id: sun.sun
#    to: 'above_horizon'
#  action:
#    - service: switch.turn_off
#      entity_id:
#        - switch.front_garage_light_switch
#        - switch.front_porch_light_switch
#        - switch.outside_den_light_switch
#        - switch.side_of_garage_light_switch

- id: close_garage_door_when_abode_is_home_or_away
  alias: 'Close garage door when Abode is Home or Away'
  initial_state: 'on'
  condition:
    - condition: state
      entity_id: cover.garage_door_opener
      state: 'open'
    - condition: template
      value_template: >
        {%- if states.automation.close_garage_door_when_abode_is_home_or_away.attributes.last_triggered  -%}
          {{(as_timestamp(now()) - as_timestamp(states.automation.close_garage_door_when_abode_is_home_or_away.attributes.last_triggered)) > 60}}
        {%- else -%}
          true
        {%- endif -%}
    - condition: or
      conditions:
       - condition: state
         entity_id: input_select.abodestatus
         state: 'armed_home'
       - condition: state
         entity_id: input_select.abodestatus
         state: 'armed_away'
  trigger:
    - platform: time
      minutes: '/5'
  action:
    - service: cover.close_cover
      entity_id: cover.garage_door_opener

- id: sensors_changed_when_nobody_home
  alias: 'Sensors changed when nobody is home'
  initial_state: 'on'
  condition:
    condition: state
    entity_id: input_select.abodestatus
    state: 'armed_away'
    for:
      minutes: 10
  trigger:
    - platform: state
      entity_id:
        - binary_sensor.garage_door
        - binary_sensor.back_door
        - binary_sensor.den_door
        - binary_sensor.front_door
        - binary_sensor.office_door
      from: 'off'
      to: 'on'
  action:
    - service: light.turn_on
      data:
        entity_id: group.all_lights
    - service: notify.ios
      data_template:
        title: "Alarm!"
        message: "The {{ trigger.to_state.name }} was changed to {{ trigger.to_state.state }} while no one is home - {{ as_timestamp(now()) | timestamp_custom('%I:%M:%S %p %d-%b-%Y', true) }}"
    - service: homeassistant.turn_on
      entity_id: script.notificationalarm

- id: sound_abode_alarm_notification
  alias: 'Sound alarm using notifications'
  initial_state: 'on'
  trigger:
    - platform: event
      event_type: ios.notification_action_fired
      event_data:
        actionName: SOUND_ALARM
  action:
    - service: light.turn_on
      data:
        entity_id: group.all_lights
    - service: homeassistant.turn_on
      entity_id: script.notificationalarm

- id: abode_update_ios_notification
  alias: Abode Update Actionable Notification
  initial_state: 'on'
  trigger:
    platform: time
    minutes: /30
    seconds: 00
  condition:
    condition: state
    entity_id: input_boolean.abodeupdate
    state: 'off'
  action:
    - service: notify.ios_gradys_iphone
      data:
        message: 'Enable Abode updates?'
        data:
          push:
            badge: 0
            category: "abode_updates"

- id: turn_on_abode_updates
  alias: 'Turn on Abode updates'
  initial_state: 'on'
  trigger:
    - platform: event
      event_type: ios.notification_action_fired
      event_data:
        actionName: ENABLE_ABODE_UPDATES
  action:
    - service: homeassistant.turn_on
      entity_id: input_boolean.abodeupdate

- id: turn_on_lights_randomly
  alias: Turn lights on randomly
  initial_state: 'on'
  condition:
    condition: state
    entity_id: input_select.abodestatus
    state: 'armed_away'
  trigger:
    platform: sun
    event: sunset
    offset: "00:45:00"
  action:
    - service: light.turn_on
      data:
        entity_id: group.living_room_lights

- id: turn_off_lights_in_2_hours
  alias: Turn off lights 2 hours
  initial_state: 'on'
  condition:
    - condition: state
      entity_id: input_select.abodestatus
      state: 'armed_away'
    - condition: state
      entity_id: group.living_room_lights
      state: 'on'
  trigger:
    platform: sun
    event: sunset
    offset: "02:45:00"
  action:
    - service: light.turn_off
      data:
        entity_id: group.living_room_lights
        
#################################################################
## iOS Actions
#################################################################

- id: open_garage_door
  alias: Open Garage
  initial_state: 'on'
  trigger:
    platform: event
    event_type: ios.notification_action_fired
    event_data:
      actionName: OPEN_GARAGE
  action:
  - service: cover.open_cover
    entity_id: cover.garage_door_opener

- id: close_garage_door
  alias: Close Garage
  initial_state: 'on'
  trigger:
    platform: event
    event_type: ios.notification_action_fired
    event_data:
      actionName: CLOSE_GARAGE
  action:
  - service: cover.close_cover
    entity_id: cover.garage_door_opener
        