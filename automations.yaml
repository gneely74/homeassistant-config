###############################################################
## Presence
################################################################

#- id: update_meta_tracker
#  alias: "Update Device Meta Tracker"
#  initial_state: 'on'
#  trigger:
#    # Delayed action for router-based and Owntracks trackers that are not 100% reliable 
#    - platform: state
#      entity_id:
#        - device_tracker.gradysiphone
#        - device_tracker.katesiphone4
#      to: 'not_home'
#      for: '00:07:00'
#    - platform: state
#      entity_id:
#        - device_tracker.gradysiphone
#        - device_tracker.katesiphone4
#      to: 'home'
#      for: '00:00:30'
#    - platform: state
#      entity_id:
#        - device_tracker.gradys_iphone
#        - device_tracker.kates_iphone
#    - platform: state
#      entity_id:
#        - device_tracker.gradys_iphone
#        - device_tracker.kates_iphone
#      to: 'home'
#    - platform: state
#      entity_id:
#        - device_tracker.gradys_iphone
#        - device_tracker.kates_iphone
#      to: 'not_home'
#  action:
#    - service: script.updatetracker
#      data_template:
#        entityid: '{{trigger.entity_id}}'

#################################################################
## Security System
#################################################################

- id: abode_ios_notifications
  alias: Abode Actionable Notification
  trigger:
    - platform: event
      event_type: abode_alarm
  action:
    - service: notify.ios
      data:
        message: 'Abode alarm triggered!'
        data:
          push:
            badge: 0
            category: "abode_alarm"

- id: disarm_abode_from_away
  alias: 'Disarm Abode from Away'
  initial_state: 'on'
  condition:
    - condition: state
      entity_id: input_select.abodestatus
      state: 'armed_away'
    - condition: state
      entity_id: input_boolean.abodeupdate
      state: 'on'
    - condition: template
      value_template: >
        {%- if states.automation.arm_abode.attributes.last_triggered -%}
          {{ (as_timestamp(now()) - as_timestamp(states.automation.arm_abode.attributes.last_triggered)) > 240 }}
        {%- else -%}
          true
        {%- endif -%}
  trigger:
    - platform: state
      entity_id: group.household
      from: 'not_home'
      to: 'home'
    - platform: event
      event_type: ios.notification_action_fired
      event_data:
        actionName: DISARM_ABODE
  action:
     service: homeassistant.turn_on
     entity_id: script.abodestandby

#- id: close_garage_door_notification
#  alias: 'Close Garage Door Notification'
#  initial_state: 'on'
#  condition:
#    condition: state
#    entity_id: cover.garage_door_opener
#    state: 'open'
#  trigger:
#    - platform: state
#      entity_id: input_select.abodestatus
#      to: 'armed_home'
#  action:
#    - service: notify.pushbullet
#      data:
#        message: "Garage Door Open"
#        title: "Garage Door Open"
#    - service: notify.pushbullet
#      data:
#        message: "Garage Door Open"
#        title: "Garage Door Open"
#    - service: homeassistant.turn_on
#      entity_id: script.notificationgaragedoor

- id: disarm_abode_at_night
  alias: 'Disarm Abode at night'
  initial_state: 'on'
  condition:
    - condition: state
      entity_id: input_select.abodestatus
      state: 'armed_home'
    - condition: state
      entity_id: input_boolean.abodeupdate
      state: 'on'
  trigger:
   - platform: state
     entity_id:
       - group.household
     from: 'off'
     to: 'on'
  action:
    service: homeassistant.turn_on
    entity_id: script.abodestandby

- id: abode_home_from_standby
  alias: 'Abode Home from Standby'
  initial_state: 'on'
  condition:
    condition: and
    conditions:
     - condition: state
       entity_id: input_select.abodestatus
       state: 'disarmed'
     - condition: time
       after: '23:00:00'
       before: '07:00:00'
     - condition: state
       entity_id: input_boolean.abodeupdate
       state: 'on'
     - condition: template
       value_template: >
         {%- if states.input_select.abodestatus.last_changed -%}
           {{ (as_timestamp(now()) - as_timestamp(states.input_select.abodestatus.last_changed)) > 300 }}
         {%- else -%}
           true
         {%- endif -%}
  trigger:
   - platform: time
     minutes: '/10'
     seconds: 00
  action:
     service: homeassistant.turn_on
     entity_id: script.abodehome

- id: abode_standby
  alias: 'Abode Standby'
  initial_state: 'on'
  condition:
    condition: and
    conditions:
     - condition: state
       entity_id: group.household
       state: 'home'
     - condition: time
       after: '07:15:00'
       before: '22:45:00'
     - condition: state
       entity_id: input_boolean.abodeupdate
       state: 'on'
     - condition: template
       value_template: >
         {%- if states.input_select.abodestatus.last_changed -%}
           {{ (as_timestamp(now()) - as_timestamp(states.input_select.abodestatus.last_changed)) > 300 }}
         {%- else -%}
           true
         {%- endif -%}
     - condition: or
       conditions:
        - condition: state
          entity_id: input_select.abodestatus
          state: 'armed_home'
        - condition: state
          entity_id: input_select.abodestatus
          state: 'armed_away'
  trigger:
   - platform: time
     minutes: '/10'
     seconds: 00
  action:
     service: homeassistant.turn_on
     entity_id: script.abodestandby

- id: abode_arm
  alias: 'Arm Abode'
  initial_state: 'on'
  condition:
    - condition: state
      entity_id: input_boolean.abodeupdate
      state: 'on'
    - condition: template
      value_template: >
        {%- if states.automation.disarm_abode_from_away.attributes.last_triggered -%}
          {{ (as_timestamp(now()) - as_timestamp(states.automation.disarm_abode_from_away.attributes.last_triggered)) > 240 }}
        {%- else -%}
          true
        {%- endif -%}
    - condition: template
      value_template: "{{ states.input_select.abodestatus.state != 'armed_away' }}"
  trigger:
    - platform: state
      entity_id: group.household
      from: 'home'
      to: 'not_home'
    - platform: state
      entity_id: group.household
      from: 'home'
      to: 'not_home'
      for: '00:10:00'
  action:
     service: homeassistant.turn_on
     entity_id: script.abodeaway

- id: abode_home_at_night
  alias: 'Abode Home at night'
  initial_state: 'on'
  condition:
    condition: and
    conditions:
     - condition: state
       entity_id: input_boolean.abodeupdate
       state: 'on'
     - condition: state
       entity_id: group.household
       state: 'home'
  trigger:
    - platform: time
      at: '22:00:00'
  action:
     service: homeassistant.turn_on
     entity_id: script.abodehome

- id: abode_disarm_morning
  alias: 'Disarm Abode in the morning'
  initial_state: 'on'
  condition:
    condition: and
    conditions:
     - condition: state
       entity_id: group.household
       state: 'home'
     - condition: state
       entity_id: input_boolean.abodeupdate
       state: 'on'
  trigger:
    - platform: time
      at: '07:00:00'
  action:
     service: homeassistant.turn_on
     entity_id: script.abodestandby

- id: abode_was_disarmed
  alias: 'Trigger when Abode was disarmed'
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: alarm_control_panel.abode_alarm
      to: "disarmed"           
  action:
     service: homeassistant.turn_on
     entity_id: script.abodestandby

- id: abode_was_armed_away
  alias: 'Trigger when Abode was Armed Away'
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: alarm_control_panel.abode_alarm
      to: "armed_away"           
  action:
     service: homeassistant.turn_on
     entity_id: script.abodeaway

- id: abode_was_armed_home
  alias: 'Trigger when Abode was Armed Home'
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: alarm_control_panel.abode_alarm
      to: "armed_home"           
  action:
     service: homeassistant.turn_on
     entity_id: script.abodehome

- id: notify_camera_pictures
  alias: 'Notify camera pictures'
  initial_state: 'on'
  condition:
    - condition: state
      entity_id: alarm_control_panel.abode_alarm
      state: 'armed_away'
  trigger:
   - platform: state
     entity_id:
       - binary_sensor.entryway_camera_motion_detected
       - binary_sensor.entryway_camera__zone_1_activity
       - binary_sensor.entryway_camera_person_detected
       - binary_sensor.entryway_camera_sound_detected
       - binary_sensor.master_bedroom_camera_motion_detected
       - binary_sensor.master_bedroom_camera_person_detected
       - binary_sensor.master_bedroom_camera_sound_detected
     from: 'off'
     to: 'on'
  action:
    - service: notify.ios
      data_template:
        message: "Check {{ trigger.entity_id.split('.')[1].split('_')[0] }} camera."
        data:
          push:
            category: camera
          entity_id: "camera.{{ trigger.entity_id.split('.')[1].split('_')[0] }}"
          attachment:
            url: "{{ states.camera[trigger.entity_id.split('.')[1].split('_')[0]].attributes.entity_picture }}"
            content-type: jpg
    - service: logbook.log
      data_template:
        name: "Camera activity: "
        message: >-
          {%- for state in states if state.entity_id == trigger.entity_id -%}
            {{ state.attributes.friendly_name }} activated at {{ as_timestamp(now()) | timestamp_custom('%I:%M:%S %p', true) }}.
          {%- endfor -%}
#    - service: logbook.log
#      data_template:
#        name: "Motion detected: "
#        message: >-
#          {%- if trigger.entity_id == "binary_sensor.backyard_field_detection" or trigger.entity_id == "binary_sensor.backyard_line_crossing" -%}
#            {{(as_timestamp(now()) - as_timestamp(states.binary_sensor.backyard_motion.attributes.last_tripped_time))|round(2)}} seconds ago.
#          {%- elif trigger.entity_id == "binary_sensor.driveway_field_detection" or trigger.entity_id == "binary_sensor.driveway_line_crossing" -%}
#            {{(as_timestamp(now()) - as_timestamp(states.binary_sensor.driveway_motion.attributes.last_tripped_time))|round(2)}} seconds ago.
#          {%- elif trigger.entity_id == "binary_sensor.patio_field_detection" or trigger.entity_id == "binary_sensor.patio_line_crossing" -%}
#            {{(as_timestamp(now()) - as_timestamp(states.binary_sensor.patio_motion.attributes.last_tripped_time))|round(2)}} seconds ago.
#          {%- elif trigger.entity_id == "binary_sensor.porch_field_detection" or trigger.entity_id == "binary_sensor.porch_line_crossing" -%}
#            {{(as_timestamp(now()) - as_timestamp(states.binary_sensor.porch_motion.attributes.last_tripped_time))|round(2)}} seconds ago.
#          {%- endif -%}

#- id: ring_camera_notification
#  alias: 'Notify Ring camera'
#  initial_state: 'on'
#  condition:
#    - condition: state
#      entity_id: input_select.abodestatus
#      state: 'armed_away'
#  trigger:
#   - platform: state
#     entity_id: sensor.ringvideourl
#  action:
#    - service: notify.ios
#      data_template:
#        message: "Check Ring camera."
#        data:
#          push:
#            category: camera
#          entity_id: camera.front_door
#          attachment:
#            url: "{{ states.camera.front_door.attributes.video_url }}"
#
#- id: ring_download_video
#  alias: 'Ring download video'
#  initial_state: 'on'
#  trigger:
#   - platform: state
#     entity_id: sensor.ringvideourl
#  action:
#    - service: downloader.download_file
#      data_template:
#        url: "{{ states.camera.front_door.attributes.video_url }}"
#        subdir: "{{'ring_' + states.camera.front_door.attributes.friendly_name.lower().replace(' ', '_')}}"
#        overwrite: True
#        filename: "{{states.camera.front_door.attributes.friendly_name.lower().replace(' ', '_')}}"

#################################################################
## HASS Related
#################################################################

- id: battery_alert
  alias: 'Battery Alert'
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: sensor.battery_status
  action:
    - service: persistent_notification.create
      data_template:
        title: Low Battery levels
        notification_id: low-battery-alert
        message: >
          Check battery: {{ states.sensor.battery_status.state }}
    - service: notify.pushbullet
      data_template:
        title: "Battery status"
        message: >
          Check battery: {{ states.sensor.battery_status.state }}

- id: heal_zwave_network
  alias: Heal Z-Wave Network
  initial_state: 'on'
  trigger:
    platform: time
    at: '2:31:00'
  action:
    service: zwave.heal_network

- id: update_available_notification
  alias: "Update Available Notification"
  initial_state: 'on'
  trigger:
    platform: template
    value_template: "{{states.sensor.pypi_hass_version.state == states.sensor.current_version.state}}"
  action:
    - service: notify.pushbullet
      data:
        message: "HomeAssistant {{ states('states.sensor.pypi_hass_version.state') }} is now available"
        title: "Update HASS"
    - service: persistent_notification.create
      data:
        title: "Update Available"
        message: >
          Home Assistant {{ states('states.sensor.pypi_hass_version.state') }} is available, please update.
        notification_id: "update_available"

- id: change_current_theme
  alias: 'Change Current Theme'
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: input_select.current_theme
  action:
    - service: frontend.set_theme
      data_template:
        name: '{{states.input_select.current_theme.state}}'

#################################################################
## Commute Times
#################################################################

- id: morning_commute
  alias: "Morning Commute"
  initial_state: 'on'
  condition:
    condition: and
    conditions:
     - condition: time
       after: '08:15:00'
       before: '11:00:00'
     - condition: time
       weekday:
         - mon
         - tue
         - wed
         - thu
         - fri
     - condition: state
       entity_id: device_tracker.meta_grady
       state: 'home'
  trigger:
    platform: numeric_state
    entity_id: sensor.morning_commute
    below: 43
  action:
    - service: notify.pushbullet
      data:
        message: Commute time is 43 minutes
        title: Leave for Work
        target: device/myiPhone
    - service: homeassistant.turn_on
      entity_id: script.notificationleavework

- id: evening_commute
  alias: "Evening Commute"
  initial_state: 'on'
  condition:
    condition: and
    conditions:
     - condition: time
       after: '17:00:00'
       before: '20:00:00'
     - condition: time
       weekday:
         - mon
         - tue
         - wed
         - thu
         - fri
     - condition: template
       value_template: >
         {%- if states.device_tracker.meta_grady -%}
           {{ states.device_tracker.meta_grady.state != 'home' }}
         {%- else -%}
           false
         {%- endif -%}
  trigger:
    platform: template
    value_template: >
      {%- if states.sensor.grady_to_home.attributes.duration_in_traffic -%}
        {{(states.sensor.grady_to_home.attributes.duration_in_traffic.split(' ')[0]|int) / (states.sensor.grady_to_home.attributes.duration.split(' ')[0]|int) < 1.25}}
      {%- else -%}
        false
      {%- endif -%}
  action:
    service: notify.pushbullet
    data_template:
      message: Commute time is {{states.sensor.grady_to_home.attributes.duration_in_traffic.split(' ')[0]|int}} minutes
      title: Leave for Home
      target: device/myiPhone

- id: plexspy_notification
  alias: "Plex Spy notification"
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: sensor.plexspy
  action:
    - service: notify.pushbullet
      data_template:
        message: >
          {%- if states.sensor.plexspy.attributes -%}
            {% set space = joiner(' ') %}
            {%- for attr in states.sensor.plexspy.attributes -%}
             {%- if not attr=="friendly_name" and not attr=="unit_of_measurement" and not attr=="homebridge_hidden"-%}
              {{space()}}{{attr}} is watching {{states.sensor.plexspy.attributes[attr]}}.
             {%- endif -%}
            {%- endfor -%}
          {%- endif -%}
        title: "Plex {{ trigger.to_state.state }} people streaming. "
        target: device/myiPhone
    - service: logbook.log
      data_template:
        name: "Plex {{ trigger.to_state.state }} people streaming. "
        message: >
          {%- if states.sensor.plexspy.attributes -%}
            {% set space = joiner(' ') %}
            {%- for attr in states.sensor.plexspy.attributes -%}
             {%- if not attr=="friendly_name" and not attr=="unit_of_measurement" and not attr=="homebridge_hidden"-%}
              {{space()}}{{attr}} is watching {{states.sensor.plexspy.attributes[attr]}}.
             {%- endif -%}
            {%- endfor -%}
          {%- endif -%}

#################################################################
## Home Automation Related
#################################################################

- id: overflow_pantry_door_open
  alias: Overflow Pantry Door Left Open Notification
  trigger:
    - platform: state
      entity_id: binary_sensor.overflow_pantry_door_sensor
      to: 'off'
  condition:
    - condition: state
      entity_id: group.household
      state: 'home' 
  action:
    - service: notify.ios
      data:
        message: 'Overflow Pantry Door left open'
        data:
          push:
            badge: 0


- id: garage_lights_on
  alias: 'Turn on garage lights when door opened'
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: cover.garage_door_opener
      from: 'closed'
      to: 'open'
  condition:
    - condition: or
      conditions:
       - condition: state
         entity_id: sun.sun
         state: 'below_horizon'
  action:
     service: light.turn_on
     data:
       entity_id: switch.garage_light

- id: garage_lights_off
  alias: 'Turn off garage lights'
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: binary_sensor.garage_door
      to: 'off'
      for: '00:00:30'
  condition:
    - condition: state
      entity_id: switch.garage_light
      state: 'on'
  action:
     service: light.turn_off
     entity_id: switch.garage_light

- id: kitchen_light_brightness
  alias: 'Kitchen light brightness'
  initial_state: 'on'
  trigger:
   - platform: state
     entity_id: light.kitchen_lights
     from: 'off'
     to: 'on'
  condition:
    - condition: template
      value_template: '{{ trigger.from_state.state == "off" }}'
  action:
     service: light.turn_on
     data:
       entity_id: light.kitchen_lights
       brightness: 200

- id: frontyard_lights
  alias: 'Turn on frontyard lights'
  initial_state: 'on'
  condition:
    - condition: state
      entity_id: sun.sun
      state: 'below_horizon'
    - condition: time
      after: '19:00:00'
      before: '05:00:00'
  trigger:
   - platform: state
     entity_id:
       - binary_sensor.entryway_camera_motion_detected
     from: 'off'
     to: 'on'
  action:
    - service: switch.turn_on
      entity_id:
        - switch.front_garage_light
        - switch.front_porch_light

#- id: frontyard_lights_off_after_ring
#  alias: 'Turn off frontyard lights after Ring'
#  initial_state: 'on'
#  condition:
#    - condition: template
#      value_template: >
#        {%- if states.binary_sensor.ring_front_door_motion.last_changed -%}
#          {{(as_timestamp(now()) - as_timestamp(states.binary_sensor.ring_front_door_motion.last_changed)) > 200}}
#        {%- else -%}
#          false
#        {%- endif -%}
#    - condition: or
#      conditions:
#        - condition: state
#          entity_id: switch.driveway
#          state: 'on'
#        - condition: state
#          entity_id: switch.wemoporch
#          state: 'on'
#  trigger:
#   - platform: time
#     minutes: '/5'
#  action:
#    - service: switch.turn_off
#      entity_id:
#        - switch.front_garage_light
#        - switch.front_porch_light


- id: outdoor_light_at_night
  alias: Outdoor lights at night
  initial_state: 'on'
  trigger:
    platform: sun
    event: sunset
    offset: "00:05:00"
  action:
    - service: switch.turn_on
      entity_id:
        - group.outside_lights
        
- id: outdoor_light_off
  alias: Outdoor light Off
  initial_state: 'on'
  trigger:
    platform: sun
    event: sunset
    offset: "03:30:00"
  action:
    - service: switch.turn_off
      entity_id:
        - group.outside_lights

- id: outsides_light_off_during_the_day
  alias: Outside lights Off during the day
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: switch.driveway
    to: 'on'
  condition:
    - condition: state
      entity_id: sun.sun
      state: 'above_horizon'
  action:
    - service: switch.turn_off
      entity_id:
        - group.outside_lights

- id: open_garage_door_when_someone_home
  alias: 'Open Garage door when someone home'
  initial_state: 'on'
  condition:
    - condition: state
      entity_id: binary_sensor.garagedoor
      state: 'off'
      for: '00:02:00'
    - condition: state
      entity_id: input_boolean.abodeupdate
      state: 'on'
    - condition: template
      value_template: >
        {%- if states.automation.open_garage_door_when_someone_home.attributes.last_triggered -%}
          {{ (as_timestamp(now()) - as_timestamp(states.automation.open_garage_door_when_someone_home.attributes.last_triggered)) > 150 }}
        {%- else -%}
          true
        {%- endif -%}
    - condition: template
      value_template: >
        {%- if states.automation.update_ha_after_startup.attributes.last_triggered -%}
          {{ (as_timestamp(now()) - as_timestamp(states.automation.update_ha_after_startup.attributes.last_triggered)) > 120 }}
        {%- else -%}
          true
        {%- endif -%}
    - condition: template
      value_template: >
        {%- if states.automation.arm_abode.attributes.last_triggered -%}
          {{ (as_timestamp(now()) - as_timestamp(states.automation.arm_abode.attributes.last_triggered)) > 240 }}
        {%- else -%}
          true
        {%- endif -%}
  trigger:
    - platform: state
      entity_id:
        - device_tracker.meta_kate
        - device_tracker.meta_grady
      from: 'not_home'
      to: 'home'
  action:
    - service: switch.turn_on
      entity_id: switch.garage_relay_switch

- id: close_garage_door_when_abode_is_home_or_away
  alias: 'Close garage door when Abode is Home or Away'
  initial_state: 'on'
  condition:
    - condition: state
      entity_id: binary_sensor.garage_door
      state: 'on'
    - condition: template
      value_template: >
        {%- if states.automation.close_garage_door_when_abode_is_home_or_away.attributes.last_triggered  -%}
          {{(as_timestamp(now()) - as_timestamp(states.automation.close_garage_door_when_abode_is_home_or_away.attributes.last_triggered)) > 60}}
        {%- else -%}
          true
        {%- endif -%}
    - condition: or
      conditions:
       - condition: state
         entity_id: input_select.abodestatus
         state: 'armed_home'
       - condition: state
         entity_id: input_select.abodestatus
         state: 'armed_away'
  trigger:
    - platform: time
      minutes: '/5'
  action:
    - service: cover.close_cover
      entity_id: cover.garage_door_opener

- id: sensors_changed_when_nobody_home
  alias: 'Sensors changed when nobody is home'
  initial_state: 'on'
  condition:
    condition: state
    entity_id: input_select.abodestatus
    state: 'armed_away'
    for:
      minutes: 10
  trigger:
    - platform: state
      entity_id:
        - binary_sensor.garagedoor
        - binary_sensor.back_door
        - binary_sensor.garage_entry_door
        - binary_sensor.front_door
        - binary_sensor.motion_sensor_158d00016daecc
        - binary_sensor.motion_sensor_158d00016612af
      from: 'off'
      to: 'on'
  action:
    - service: light.turn_on
      data:
        entity_id: group.all_lights
    - service: notify.pushbullet
      data_template:
        title: "Alarm!"
        message: "The {{ trigger.to_state.name }} was changed to {{ trigger.to_state.state }} while no one is home - {{ as_timestamp(now()) | timestamp_custom('%I:%M:%S %p %d-%b-%Y', true) }}"
    - service: homeassistant.turn_on
      entity_id: script.notificationalarm

- id: sound_abode_alarm_notification
  alias: 'Sound alarm using notifications'
  initial_state: 'on'
  trigger:
    - platform: event
      event_type: ios.notification_action_fired
      event_data:
        actionName: SOUND_ALARM
  action:
    - service: light.turn_on
      data:
        entity_id: group.all_lights
    - service: homeassistant.turn_on
      entity_id: script.notificationalarm

- id: abode_update_ios_notification
  alias: Abode Update Actionable Notification
  initial_state: 'on'
  trigger:
    platform: time
    minutes: /30
    seconds: 00
  condition:
    condition: state
    entity_id: input_boolean.abodeupdate
    state: 'off'
  action:
    - service: notify.ios_gradys_iphone
      data:
        message: 'Enable Abode updates?'
        data:
          push:
            badge: 0
            category: "abode_updates"

- id: turn_on_abode_updates
  alias: 'Turn on Abode updates'
  initial_state: 'on'
  trigger:
    - platform: event
      event_type: ios.notification_action_fired
      event_data:
        actionName: ENABLE_ABODE_UPDATES
  action:
    - service: homeassistant.turn_on
      entity_id: input_boolean.abodeupdate

- id: turn_on_lights_randomly
  alias: Turn lights on randomly
  initial_state: 'on'
  condition:
    condition: state
    entity_id: input_select.abodestatus
    state: 'armed_away'
  trigger:
    platform: sun
    event: sunset
    offset: "00:45:00"
  action:
    - service: light.turn_on
      data:
        entity_id: group.living_room_lights

- id: turn_off_lights_in_2_hours
  alias: Turn off lights 2 hours
  initial_state: 'on'
  condition:
    - condition: state
      entity_id: input_select.abodestatus
      state: 'armed_away'
    - condition: state
      entity_id: group.living_room_lights
      state: 'on'
  trigger:
    platform: sun
    event: sunset
    offset: "02:45:00"
  action:
    - service: light.turn_off
      data:
        entity_id: group.living_room_lights
        
#################################################################
## iOS Actions
#################################################################

- alias: Open Garage
  id: open_garage_door
  trigger:
    platform: event
    event_type: ios.notification_action_fired
    event_data:
      actionName: OPEN_GARAGE
  action:
  - service: cover.open_cover
    entity_id: cover.garage_door_opener

- alias: Close Garage
  id: close_garage_door
  trigger:
    platform: event
    event_type: ios.notification_action_fired
    event_data:
      actionName: CLOSE_GARAGE
  action:
  - service: cover.close_cover
    entity_id: cover.garage_door_opener
        