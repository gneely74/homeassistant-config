  - platform: version
  - platform: uptime
    unit_of_measurement: minutes
  - platform: season
  - platform: speedtest
    hour:
      - 12
    monitored_conditions:
      - download
#  - platform: currencylayer
#    api_key: !secret currencylayer_key
#    base: USD
#    quote:
#      - INR
#Forecast.io weather sensors
  - platform: darksky
    api_key: !secret darksky_key
    monitored_conditions:
      - wind_speed
      - summary
      - icon
      - nearest_storm_distance
      - nearest_storm_bearing
      - precip_type
      - precip_intensity
      - precip_probability
      - temperature
      - apparent_temperature
      - dew_point
      - wind_speed
      - wind_bearing
      - cloud_cover
      - humidity
      - pressure
      - visibility
      - ozone
      - minutely_summary
      - hourly_summary
      - daily_summary
      - temperature_max
      - temperature_min
      - apparent_temperature_max
      - apparent_temperature_min
      - precip_intensity_max
#Time and Date Sensor
  - platform: time_date
    display_options:
      - 'time_date'
#Morning Commute Google Travel Time Sensor
#  - platform: google_travel_time
#    name: Morning Commute
#    api_key: !secret google_key
#    origin: !secret add_home
#    destination: !secret add_buckhead
#Evening Commute Google Travel Time Sensor
#  - platform: google_travel_time
#    name: Evening Commute
#    api_key: !secret google_key
#    origin: !secret add_buckhead
#    destination: !secret add_home
#  - platform: google_travel_time
#    name: Grady to Home
#    friendly_name: "Commute to Home"
#    api_key: !secret google_key
#    origin: device_tracker.grady_grady
#    destination: !secret add_home
  - platform: wunderground
    api_key: !secret wunderground_key
    pws_id: !secret wunderground_pws
    monitored_conditions:
      - weather
      - temp_f
      - wind_string
      - relative_humidity
  - platform: gearbest
    currency: USD
    items:
      - url: https://www.gearbest.com/alarm-systems/pp_659226.html
        name: Xiaomi Aqara Human Body Sensor
      - url: https://www.gearbest.com/access-control/pp_626702.html
        name: Xiaomi Aqara Temperature Humidity Sensor
# Add in your secrets.yaml file pollen_url: https://www.pollen.com/api/forecast/current/pollen/ZIPCODE
  - platform: rest
    name: pollen
    resource: !secret pollen_url
    value_template: "{{value_json.Location.periods[1].Index}}"
    scan_interval: 21600
    headers:
       Referer: "https://www.pollen.com"
# Add in your secrets.yaml file pollen_url: https://www.pollen.com/api/forecast/current/pollen/ZIPCODE
  - platform: rest
    name: cold_flu
    resource: !secret cold_flu_url
    value_template: "{{value_json.Location.periods[0].Index}}"
    scan_interval: 21600
    headers:
       Referer: "https://www.pollen.com"
  - platform: mqtt
    state_topic: "owntracks/pi/katephone/step"
    name: "Steps Kate"
    value_template: '{{ value_json.steps }}'
  - platform: mqtt
    state_topic: "owntracks/pi/gradyphone/step"
    name: "Steps Grady"
    value_template: '{{ value_json.steps }}'
  - platform: command_line
    name: "PyPi HASS Version"
    command: python3 -c "import requests; print(requests.get('https://pypi.python.org/pypi/homeassistant/json').json()['info']['version'])"
  - platform: template
    sensors:
      overflow_pantry_door:
        friendly_name: "Overflow Pantry Door"
        value_template: '{% if is_state("sensor.overflow_pantry_door_access_control", "22") %}open{% else %}closed{% endif %}'
        icon_template: '{% if is_state("sensor.overflow_pantry_door_access_control", "22") %}mdi:door-open{% else %}mdi:door{% endif %}'
      battery_status:
        friendly_name: "Battery Status"
        value_template: >-
          {%- set threshold = 25 -%}
          {%- set domains = ['light', 'switch', 'sensor', 'zwave', 'binary_sensor'] -%}
          {%- for domain in domains -%}
          {%- for item in states[domain] if ((item.attributes.battery_low is defined and item.attributes['battery_low'] == true) or (item.attributes.battery_level is defined and item.attributes['battery_level'] | int < threshold)) -%}
              {{ item.name }}{%- if not loop.last %}, {% endif -%}
          {%- endfor -%}
          {%- endfor -%}
      hassuptime:
        friendly_name: "HASS Uptime"
        value_template: >-
          {% set uptime = states.sensor.uptime.state | round %}
          {% set minutes = (uptime % 60) | int %}
          {% set hours = ((uptime / 60) % 24) | int %}
          {% set days = (uptime / 1440) | int %}
          {%- if days > 0 -%}
            {%- if days == 1 -%}
              1 day
            {%- else -%}
              {{ days }} days
            {%- endif -%}
            {{ ', ' }}
          {%- endif -%}
          {{ '%02d' % hours }}:{{ '%02d' % minutes }} hrs
      hvacmode:
        friendly_name: "HVAC Mode"
        value_template: >-
          {%- if states.climate.upstairs.attributes.operation == "heat" -%}
            heat
          {%- elif states.climate.downstairs.attributes.operation == "cool" -%}
            cool
          {%- endif -%}
        icon_template: >-
          {%- if states.climate.upstairs.attributes.operation == "heat" -%}
            mdi:fire
          {%- elif states.climate.downstairs.attributes.operation == "cool" -%}
            mdi:snowflake
          {%- endif -%}
      # ringvideourl:
      #   friendly_name: "Ring Video URL"
      #   value_template: >-
      #      {%- if states.camera.front_door.attributes.video_url != None -%}
      #        {{states.camera.front_door.attributes.video_url.split('?')[0]}}
      #      {%- else -%}
      #        unknown
      #      {%- endif -%}
      hoursslept:
        friendly_name: "Hours Slept"
        unit_of_measurement: "hrs"
        value_template: >-
           {%- if states.sensor.sleep_minutesasleep != None -%}
             {{(states.sensor.sleep_minutesasleep.state|int/60)|round(2)}}
           {%- else -%}
             unknown
           {%- endif -%}
      garagedoorbattery:
        friendly_name: "Garage Door Sensor Battery"
        unit_of_measurement: "%"
        value_template: >-
           {%- if states.zwave.garage_door_tilt_sensor != None -%}
             {{ states.zwave.garage_door_tilt_sensor.attributes.battery_level }}
           {%- else -%}
             unknown
           {%- endif -%}
      downstairsthermoper:
        friendly_name: "Downstairs Thermostat"
        value_template: >-
           {%- if states.climate.downstairs != None -%}
             {{ states.climate.downstairs.attributes.operation }}
           {%- else -%}
             unknown
           {%- endif -%}
        icon_template: >-
          {%- if states.climate.downstairs.attributes.operation == "heat" -%}
            mdi:fire
          {%- elif states.climate.downstairs.attributes.operation == "cool" -%}
            mdi:snowflake
          {%- else -%}
            mdi:fan
          {%- endif -%}
      upstairsthermoper:
        friendly_name: "Upstairs Thermostat"
        value_template: >-
           {%- if states.climate.upstairs != None -%}
             {{ states.climate.upstairs.attributes.operation }}
           {%- else -%}
             unknown
           {%- endif -%}
        icon_template: >-
          {%- if states.climate.upstairs.attributes.operation == "heat" -%}
            mdi:fire
          {%- elif states.climate.upstairs.attributes.operation ==  "cool" -%}
            mdi:snowflake
          {%- else -%}
            mdi:fan
          {%- endif -%}
      living_room:
        value_template: >-
          {%- if states.states.remote.livingroom != None -%}
            {{ states.remote.livingroom.attributes.current_activity }}
          {%- else -%}
            NA
          {%- endif -%}
      sonos_volume:
        value_template: >-
          {%- if states.media_player.livingroomsonos.attributes.volume_level != None -%}
            {{ (states.media_player.livingroomsonos.attributes.volume_level|default(0) * 100) |int }}
          {%- else -%}
            NA
          {%- endif -%}
        friendly_name: 'Sonos Volume'
      leeotemp:
        friendly_name: "Leeo Temperature"
        unit_of_measurement: '°F'
        value_template: >-
          {%- if states.input_number.leeotemperature.state != None -%}
            {{ states.input_number.leeotemperature.state }}
          {%- else -%}
            NA
          {%- endif -%}
      leeohumid:
        friendly_name: "Leeo Humidity"
        unit_of_measurement: '%'
        value_template: >-
          {%- if states.input_number.leeohumidity.state != None -%}
            {{ states.input_number.leeohumidity.state }}
          {%- else -%}
            NA
          {%- endif -%}
      leeouptemp:
        friendly_name: "Leeo Upstairs Temperature"
        unit_of_measurement: '°F'
        value_template: >-
          {%- if states.input_number.leeoupstairstemp.state != None -%}
            {{ states.input_number.leeoupstairstemp.state }}
          {%- else -%}
            NA
          {%- endif -%}
      leeouphumid:
        friendly_name: "Leeo Upstairs Humidity"
        unit_of_measurement: '%'
        value_template: >-
          {%- if states.input_number.leeoupstairshumidity.state != None -%}
            {{ states.input_number.leeoupstairshumidity.state }}
          {%- else -%}
            NA
          {%- endif -%}
      leeoalarmstatus:
        friendly_name: "Leeo Alarm"
        value_template: >-
           {%- if states.input_boolean.leeoalarm.state == 'off' -%}
              Off
           {%- elif states.input_boolean.leeoalarm.state == 'on' -%}
              Active
           {%- elif states.input_boolean.leeoalarm.state == None -%}
              unknown
           {%- endif -%}
      pollen_level:
        friendly_name: 'Pollen Level'
        value_template: >-
          {%- if states.sensor.pollen.state|float <= 2.4 %}
              Low
          {%- elif states.sensor.pollen.state|float <= 4.8 %}
              Medium-Low
          {%- elif states.sensor.pollen.state|float <= 7.2 %}
              Medium
          {%- elif states.sensor.pollen.state|float <= 9.6 %}
              Medium-High
          {%- elif states.sensor.pollen.state|float <= 12.0 %}
              High
          {% else %}
              Unknown
          {%- endif %}
      cold_flu_risk:
        friendly_name: 'Cold & Flu Risk'
        value_template: >-
          {%- if states.sensor.cold_flu.state|float <= 2.4 %}
              Low
          {%- elif states.sensor.cold_flu.state|float <= 4.8 %}
              Medium-Low
          {%- elif states.sensor.cold_flu.state|float <= 7.2 %}
              Medium
          {%- elif states.sensor.cold_flu.state|float <= 9.6 %}
              Medium-High
          {%- elif states.sensor.cold_flu.state|float <= 12.0 %}
              High
          {% else %}
              Unknown
          {%- endif %}
      emulated_hue_names:
        friendly_name: "Emulated Hue Names"
        value_template: >-
          {% for item in states if item.attributes.emulated_hue_name|length > 0-%}
            {%- if loop.first %}{% elif loop.last %}, and {% else %}, {% endif -%}
            {{item.attributes.emulated_hue_name|title}}
          {%- endfor -%}.
